openapi: 3.0.3
info:
  title: User - OpenAPI 3.0
  description: |-
    This is a my first OpenAPI 3.0 specification for users.    
  contact:
    email: mail@email.com
  version: 2.0.0
servers:
  - url: https://user-server/v2
tags:
  - name: users
    description: Everything about your users
  - name: search
    description: Search users.
paths:
  /users:
    post:
      tags:
        - users
      summary: Create a new user
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      tags:
        - users
      summary: List all users
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
  /users/{id}:
    get:
      tags:
        - users
      summary: Info for a specific user
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
    put:
      tags:
        - users
      summary: Update an existent user
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
    delete:
      tags:
        - users
      summary: Delete a user
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
    patch:
      tags:
        - users
      summary: Update an existent user
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
  
  /search:
    get:
      tags:
        - search
      summary: Search users
      parameters:
        - name: name
          in: query
          description: search by name
          schema:
            type: string
        - name: lastname
          in: query
          description: search by name
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lastname:
          type: string